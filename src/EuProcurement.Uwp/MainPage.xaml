<Page
    x:Class="EuProcurement.Uwp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EuProcurement.Uwp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    x:Name="Page">

    <Page.Resources>
        <DataTemplate x:Key="CpvSelectionTreeCheckboxTemplate" x:DataType="local:SelectionTreeItem">
            <RelativePanel>
                <CheckBox x:Name="CheckBox"
                          MinWidth="0"
                          IsEnabled="{x:Bind IsSelectable, Mode=OneWay}"
                          IsChecked="{x:Bind IsSelected, Mode=TwoWay}"/>
                <TextBlock x:Name="ValueTextBlock" Text="{x:Bind Value, Mode=OneWay}"
                           Visibility="{x:Bind local:MainPage.IsNotNullToVisibility(Value), Mode=OneWay}"
                           Foreground="Gray"
                           RelativePanel.RightOf="CheckBox"/>
                <TextBlock x:Name="DisplayTextBlock"
                           Text="{x:Bind DisplayName, Mode=OneWay}"
                           TextWrapping="WrapWholeWords"
                           RelativePanel.RightOf="CheckBox" 
                           RelativePanel.Below="ValueTextBlock" />
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="SelectionCheckboxTemplate" x:DataType="local:SelectionTreeItem">
            <CheckBox x:Name="CheckBox"
                      IsEnabled="{x:Bind IsSelectable, Mode=OneWay}"
                      IsChecked="{x:Bind IsSelected, Mode=TwoWay}"
                      Content="{x:Bind DisplayName, Mode=OneWay}"/>
        </DataTemplate>
        <DataTemplate x:Key="CountrySelectionTemplate" x:DataType="local:CountrySelection">
            <controls:SlidableListItem
                HorizontalAlignment="Stretch"
                Background="Gray"
                IsLeftCommandEnabled="False"
                IsRightCommandEnabled="True"
                RightIcon="Delete"
                RightLabel="Delete"
                RightForeground="White"
                RightBackground="OrangeRed"
                RightCommand="{Binding ElementName=Page, Path=ViewModel.CountrySelector.RemovePair, Mode=OneWay}"
                RightCommandParameter="{x:Bind}"
                MouseSlidingEnabled="True"
                IsOffsetLimited="True"
                IsPointerReleasedOnSwipingHandled="True"
                ActivationWidth="100">
                <Grid Height="30">
                    <TextBlock Text="{x:Bind ToString()}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                </Grid>
            </controls:SlidableListItem>
        </DataTemplate>
        <DataTemplate x:Key="AnalysisResultTemplate" x:DataType="local:AnalysisResult">
            <RelativePanel HorizontalAlignment="Stretch"
                           Background="#77444444"
                           BorderBrush="DimGray"
                           BorderThickness="2"
                           Padding="12,6,0,6">
                <RelativePanel.Resources>
                    <Style TargetType="controls:HeaderedTextBlock">
                        <Setter Property="Margin" Value="12,0" />
                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Right" TextAlignment="Right" Text="{Binding}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="TextStyle">
                            <Setter.Value>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource HeaderedTextBlockTextStyle}">
                                    <Setter Property="TextAlignment" Value="Right" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RelativePanel.Resources>
                <TextBlock  x:Name="CountryTextBlock"
                            Text="{x:Bind CountrySelection.ToString()}" />
                <controls:HeaderedTextBlock Header="Paid"
                                            x:Name="PaidTextBlock"
                                            Text="{x:Bind EuroPaidString}"
                                            Margin="12,0"
                                            RelativePanel.Below="CountryTextBlock"
                                            RelativePanel.AlignRightWithPanel="True" />
                <controls:HeaderedTextBlock Header="Received"
                                            x:Name="ReceivedTextBlock"
                                            Text="{x:Bind EuroReceivedString}"
                                            Margin="12,0"
                                            RelativePanel.Below="PaidTextBlock"
                                            RelativePanel.AlignRightWithPanel="True"/>
                <controls:HeaderedTextBlock Header="Total (as paid)"
                                            Text="{x:Bind TotalEuroAsPaidString}"
                                            Margin="12,0"
                                            RelativePanel.Below="ReceivedTextBlock"
                                            RelativePanel.AlignRightWithPanel="True"/>
            </RelativePanel>
        </DataTemplate>
        <Style TargetType="controls:BladeItem">
            <Setter Property="Width" Value="400" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="TitleBarBackground" Value="Gray" />
            <Setter Property="TitleBarForeground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
            <Setter Property="CloseButtonBackground" Value="DimGray" />
            <Setter Property="CloseButtonForeground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0,1" />
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Visibility="{x:Bind InvertVisibility(LoadingProgressRing.Visibility), Mode=OneWay}">
            <controls:BladeView x:Name="BladeView" Padding="24">
                <controls:BladeItem x:Name="RootBlade"
                                    IsOpen="True"
                                    TitleBarVisibility="Collapsed">
                    <ListView
                        x:Name="ResultsListView"
                        ItemsSource="{x:Bind ViewModel.AnalysisResults, Mode=OneWay}"
                        ItemTemplate="{StaticResource AnalysisResultTemplate}"
                        SelectionMode="None"
                        Padding="24">
                        <ListView.Header>
                            <TextBlock Style="{ThemeResource TitleTextBlockStyle}"
                                   Text="EU Procurement Net flow analysis"
                                   Margin="0,0,0,12"
                                   TextWrapping="WrapWholeWords" />
                        </ListView.Header>
                        <ListView.Footer>
                            <CommandBar IsOpen="True" IsSticky="True">
                                <AppBarButton x:Name="AboutButton" Icon="Help" Label="About" Click="AboutButton_OnClick" />
                            </CommandBar>
                        </ListView.Footer>
                    </ListView>
                </controls:BladeItem>
                
                <controls:BladeItem x:Name="FilterBlade"
                                    IsOpen="True"
                                    TitleBarVisibility="Collapsed"
                                    Width="180">
                    <StackPanel x:Name="FilterBladeStackPanel" Margin="24">
                        <TextBlock Style="{ThemeResource TitleTextBlockStyle}">Filters</TextBlock>
                        <ToggleButton x:Name="CpvFilterToggleButton"
                                      Content="CPV filter"
                                      Margin="0,12"
                                      IsChecked="{Binding ElementName=CpvDivisionsBlade, Path=IsOpen, Mode=TwoWay}" />
                        <ToggleButton x:Name="YearFilterToggleButton"
                                      Content="Year filter"
                                      Margin="0,12"
                                      IsChecked="{Binding ElementName=YearsBlade, Path=IsOpen, Mode=TwoWay}"/>
                        <ToggleButton x:Name="CountryFilterToggleButton"
                                      Content="Country filter"
                                      Margin="0,12"
                                      IsChecked="{Binding ElementName=CountriesBlade, Path=IsOpen, Mode=TwoWay}"/>
                    </StackPanel>
                </controls:BladeItem>

                <controls:BladeItem x:Name="YearsBlade"
                                    Title="Year filter"
                                    IsOpen="False"
                                    Width="200"
                                    VisibilityChanged="YearsBlade_OnVisibilityChanged">
                    <ListView x:Name="YearFilterListView"
                              ItemsSource="{x:Bind ViewModel.YearSelectionRoot.Children, Mode=OneWay}"
                              ItemTemplate="{StaticResource SelectionCheckboxTemplate}"
                              SelectionMode="None"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{x:Bind ViewModel.YearSelectionRoot.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>

                <controls:BladeItem x:Name="CountriesBlade"
                                    Title="Countries filter"
                                    IsOpen="True"
                                    Width="300"
                                    VisibilityChanged="CountriesBlade_OnVisibilityChanged">
                    <ListView x:Name="CountriesListView"
                              ItemsSource="{x:Bind ViewModel.CountrySelector.SelectedPairs, Mode=OneWay}"
                              ItemTemplate="{StaticResource CountrySelectionTemplate}"
                              SelectionMode="None"
                              Padding="12,24">
                        <ListView.Header>
                            <RelativePanel>
                                <ComboBox x:Name="CountryFromBox" 
                                          Header="Country from"
                                          ItemsSource="{x:Bind ViewModel.CountrySelector.Countries, Mode=OneWay}"
                                          SelectedItem="{x:Bind ViewModel.CountrySelector.NewCountryFrom, Mode=TwoWay}"
                                          Margin="12" />
                                <ComboBox x:Name="CountryToBox"
                                          Header="Country to"
                                          ItemsSource="{x:Bind ViewModel.CountrySelector.Countries, Mode=OneWay}"
                                          SelectedItem="{x:Bind ViewModel.CountrySelector.NewCountryTo, Mode=TwoWay}"
                                          Margin="12"
                                          RelativePanel.RightOf="CountryFromBox"/>
                                <Button x:Name="CountryPairCreateButton"
                                        Content="Add"
                                        Command="{x:Bind ViewModel.CountrySelector.CreatePair, Mode=OneWay}"
                                        Margin="12"
                                        RelativePanel.Below="CountryToBox"
                                        RelativePanel.AlignRightWithPanel="True"/>
                            </RelativePanel>
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>

                <controls:BladeItem x:Name="CpvDivisionsBlade"
                                    Title="CPV Divisions"
                                    IsOpen="False"
                                    VisibilityChanged="CpvDivisionsBlade_OnVisibilityChanged">
                    <ListView x:Name="CpvDivisionsListView"
                              ItemsSource="{x:Bind ViewModel.CpvSelectableTreeRoot.Children, Mode=OneWay}"
                              ItemTemplate="{StaticResource CpvSelectionTreeCheckboxTemplate}"
                              SelectionChanged="CpvDivisionsListView_OnSelectionChanged"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{Binding ElementName=Page, Path=ViewModel.CpvSelectableTreeRoot.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>
                
                <controls:BladeItem x:Name="CpvGroupsBlade"
                                    Title="{x:Bind CpvDivisionsListView.SelectedItem.(local:SelectionTreeItem.DisplayName), Mode=OneWay}"
                                    IsOpen="False"
                                    VisibilityChanged="CpvGroupsBlade_OnVisibilityChanged">
                    <ListView x:Name="CpvGroupsListView"
                              ItemsSource="{x:Bind CpvDivisionsListView.SelectedItem.(local:SelectionTreeItem.Children), Mode=OneWay}"
                              ItemTemplate="{StaticResource CpvSelectionTreeCheckboxTemplate}"
                              SelectionChanged="CpvGroupsListView_OnSelectionChanged"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{Binding ElementName=CpvDivisionsListView, Path=SelectedItem.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>
                
                <controls:BladeItem x:Name="CpvClassesBlade"
                                    Title="{x:Bind CpvGroupsListView.SelectedItem.(local:SelectionTreeItem.DisplayName), Mode=OneWay}"
                                    IsOpen="False"
                                    VisibilityChanged="CpvClassesBlade_OnVisibilityChanged">
                    <ListView x:Name="CpvClassesListView"
                              ItemsSource="{x:Bind CpvGroupsListView.SelectedItem.(local:SelectionTreeItem.Children), Mode=OneWay}"
                              ItemTemplate="{StaticResource CpvSelectionTreeCheckboxTemplate}"
                              SelectionChanged="CpvClassesListView_OnSelectionChanged"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{Binding ElementName=CpvGroupsListView, Path=SelectedItem.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>
                
                <controls:BladeItem x:Name="CpvCategoriesBlade"
                                    Title="{x:Bind CpvClassesListView.SelectedItem.(local:SelectionTreeItem.DisplayName), Mode=OneWay}"
                                    IsOpen="False"
                                    VisibilityChanged="CpvCategoriesBlade_OnVisibilityChanged">
                    <ListView x:Name="CpvCategoriesListView"
                              ItemsSource="{x:Bind CpvClassesListView.SelectedItem.(local:SelectionTreeItem.Children), Mode=OneWay}"
                              ItemTemplate="{StaticResource CpvSelectionTreeCheckboxTemplate}"
                              SelectionChanged="CpvCategoriesListView_OnSelectionChanged"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{Binding ElementName=CpvClassesListView, Path=SelectedItem.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>
                
                <controls:BladeItem x:Name="CpvSubcategoriesBlade"
                                    Title="{x:Bind CpvCategoriesListView.SelectedItem.(local:SelectionTreeItem.DisplayName), Mode=OneWay}"
                                    IsOpen="False">
                    <ListView x:Name="CpvSubcategoriesListView"
                              ItemsSource="{x:Bind CpvCategoriesListView.SelectedItem.(local:SelectionTreeItem.Children), Mode=OneWay}"
                              ItemTemplate="{StaticResource CpvSelectionTreeCheckboxTemplate}"
                              SelectionMode="None"
                              Padding="24">
                        <ListView.Header>
                            <ToggleButton Content="Toggle all" IsChecked="{Binding ElementName=CpvCategoriesListView, Path=SelectedItem.IsSelected, Mode=TwoWay}" Margin="0,0,0,6" />
                        </ListView.Header>
                    </ListView>
                </controls:BladeItem>
            </controls:BladeView>
        </Grid>
        <ProgressRing x:Name="LoadingProgressRing"
                      IsActive="{x:Bind ViewModel.IsLoadingData, Mode=OneWay}"
                      Visibility="{x:Bind ViewModel.IsLoadingData, Mode=OneWay}"
                      Width="100"
                      Height="100"/>
        <ContentDialog x:Name="AboutDialog"
                       Title="About"
                       IsPrimaryButtonEnabled="False"
                       IsSecondaryButtonEnabled="True"
                       SecondaryButtonText="Close">
            <ContentControl.Resources>
                <Style TargetType="controls:HeaderedTextBlock">
                    <Setter Property="Margin" Value="12" />
                    <Setter Property="TextStyle">
                        <Setter.Value>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource HeaderedTextBlockTextStyle}">
                                <Setter Property="TextWrapping" Value="WrapWholeWords" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ContentControl.Resources>
            <ScrollViewer Padding="12">
                <StackPanel>
                    <controls:HeaderedTextBlock Header="Title" Text="EU Procurement Analysis" />
                    <controls:HeaderedTextBlock x:Name="VersionTextBlock" Header="Version" />
                    <controls:HeaderedTextBlock Header="Authors" Text="© 2017 Amadeusz Sadowski &amp; Piotr Olechno" />
                    <controls:HeaderedTextBlock Header="University" Text="Warsaw University of Technology" />
                    <controls:HeaderedTextBlock Header="Description">
                        <controls:HeaderedTextBlock.Text>
                            Analyze EU TED public procurement results with a great array of filtering options.
                            Pretty, simple and modern UI will only help you in this interesting education endeavor.
                        </controls:HeaderedTextBlock.Text>
                    </controls:HeaderedTextBlock>
                    <controls:HeaderedTextBlock Header="Additional info">
                        <controls:HeaderedTextBlock.Text>
                            This app is a UWP app written in C# for purposes of university course
                            in Social Networks Analysis Techniques (pol. TASS Techniki Analizy Sieci Społecznościowych),
                            Faculty of Electronics and Information at Warsaw University of Technology (PL).
                            The idea for an app was conceived by course authors, M.Sc. Piotr Arabas and M.Sc. Mariusz Kamola.
                        </controls:HeaderedTextBlock.Text>
                    </controls:HeaderedTextBlock>
                    <StackPanel Margin="12">
                        <TextBlock Text="References" />
                        <HyperlinkButton Content="MIT license" NavigateUri="https://github.com/amis92/EuProcurement/blob/master/LICENSE"/>
                        <HyperlinkButton Content="TASS course website" NavigateUri="http://data.europa.eu/euodp/pl/data/dataset/ted-1" />
                        <HyperlinkButton Content="Support" NavigateUri="https://github.com/amis92/EuProcurement/issues"/>
                        <HyperlinkButton Content="GitHub source code repo" NavigateUri="https://github.com/amis92/EuProcurement"/>
                        <HyperlinkButton Content="EU Open Data TED website" NavigateUri="http://data.europa.eu/euodp/pl/data/dataset/ted-1" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </ContentDialog>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Full">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootBlade.Width" Value="280" />
                        <Setter Target="BladeView.Padding" Value="12" />
                        <Setter Target="ResultsListView.Padding" Value="12" />
                        <Setter Target="FilterBladeStackPanel.Margin" Value="12" />
                        <Setter Target="CpvDivisionsListView.Padding" Value="12" />
                        <Setter Target="CpvGroupsListView.Padding" Value="12" />
                        <Setter Target="CpvClassesListView.Padding" Value="12" />
                        <Setter Target="CpvCategoriesListView.Padding" Value="12" />
                        <Setter Target="CpvSubcategoriesListView.Padding" Value="12" />
                        <Setter Target="CpvDivisionsBlade.Width" Value="280" />
                        <Setter Target="CpvGroupsBlade.Width" Value="280" />
                        <Setter Target="CpvClassesBlade.Width" Value="280" />
                        <Setter Target="CpvCategoriesBlade.Width" Value="280" />
                        <Setter Target="CpvSubcategoriesBlade.Width" Value="280" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
